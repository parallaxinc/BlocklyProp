[main]

credentialsMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher
allow_all_credentialsMatcher = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher
# cloudSessionMatcher = com.parallax.server.blocklyprop.security.CloudSessionCredentialsMatcher

cloudsessionRealm = com.parallax.server.blocklyprop.security.CloudSessionAuthenticationRealm
# cloudsessionRealm.credentialsMatcher = $cloudSessionMatcher

securityManager.realms = $cloudsessionRealm

sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

# Configure a SessionDAO and then set it:
sessionDao = com.parallax.server.blocklyprop.security.BlocklyPropSessionDao
securityManager.sessionManager.sessionDAO = $sessionDao
securityManager.sessionManager.sessionIdCookieEnabled = true

ssl.enabled = false
shiro.loginUrl = /login.jsp

# Disable scheduler in a multi-host environment
# sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
# Default is 3,600,000 millis = 1 hour:
# One day is 86,400,000 millis
# sessionValidationScheduler.interval = 86400000
# securityManager.sessionManager.sessionValidationScheduler = $sessionValidationScheduler


[urls]
# CDN (data, local during development) (maybe add a hotlink protection?)
/cdn/** = anon

# Regsitration, authentication, password reset
/login.jsp = authc, ssl
/logout = logout, ssl
/authenticate = anon, ssl
/oauth/** = anon, ssl

#Secure pages
/register = anon, ssl
/confirmrequest = anon, ssl
/confirm = anon, ssl
/resetrequest = anon, ssl
/reset = anon, ssl

# Public pages
/ = anon, ssl
/index = anon, ssl
/projects.jsp = anon, ssl
/public/** = anon
/ping = anon
/demo/** = anon, ssl
/frame/** = anon, ssl
/projectlink = anon, ssl

# REST api and api documentation
/apidoc = anon
/rest/shared/** = anon, ssl
/rest/** = authc, ssl

# Authorized projects
/createproject = authc, noSessionCreation, ssl

# Application pages
/** = authc, user, ssl
